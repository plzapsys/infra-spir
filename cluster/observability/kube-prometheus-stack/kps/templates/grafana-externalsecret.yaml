apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana
  labels:
    {{- include "kube-prometheus-stack.labels" . | nindent 4 }}
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    template:
      metadata:
        labels:
          {{- include "kube-prometheus-stack.labels" . | nindent 10 }}
      data:
        admin-user: {{ `"{{ .adminUser }}"` }}
        admin-password: {{ `"{{ .adminPassword }}"` }}
        ldap-toml: |
          [[servers]]
          host = {{ `"{{ .host }}"` }}
          port = {{ `{{ .port }}` }}
          use_ssl = true
          start_tls = true
          ssl_skip_verify = true

          bind_dn = {{ `"{{ .bindDn }}"` }}
          bind_password = {{ `"{{ .bindPassword }}"` }}

          search_filter = "(&(&(objectclass=inetorgperson)(memberof=cn=grafana_users,cn=groups,cn=accounts,dc=home,dc=devmem,dc=ru))(|(uid=%s)(mail=%s)))"
          search_base_dns = [{{ `"{{ .usersDns }}"` }}]
          group_search_base_dns = [{{ `"{{ .groupsDns }}"` }}]

          [servers.attributes]
          name = "givenName"
          surname = "sn"
          username = "uid"
          member_of = "memberOf"
          email = "mail"

          [[servers.group_mappings]]
          group_dn = "cn=grafana_admins,cn=groups,cn=accounts,dc=home,dc=devmem,dc=ru"
          org_role = "Admin"
          grafana_admin = true

          [[servers.group_mappings]]
          group_dn = "cn=grafana_rw_users,cn=groups,cn=accounts,dc=home,dc=devmem,dc=ru"
          org_role = "Editor"

          [[servers.group_mappings]]
          group_dn = "cn=grafana_ro_users,cn=groups,cn=accounts,dc=home,dc=devmem,dc=ru"
          org_role = "Viewer"
  data:
    - secretKey: adminUser
      remoteRef:
        key: secret/kps/grafana
        property: admin-user
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: adminPassword
      remoteRef:
        key: secret/kps/grafana
        property: admin-password
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: host
      remoteRef:
        key: secret/common/ldap
        property: host
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: port
      remoteRef:
        key: secret/common/ldap
        property: port
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: usersDns
      remoteRef:
        key: secret/common/ldap
        property: users-dn
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: groupsDns
      remoteRef:
        key: secret/common/ldap
        property: groups-dn
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: bindDn
      remoteRef:
        key: secret/kps/grafana
        property: ldap-bind-dn
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: bindPassword
      remoteRef:
        key: secret/kps/grafana
        property: ldap-bind-password
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
