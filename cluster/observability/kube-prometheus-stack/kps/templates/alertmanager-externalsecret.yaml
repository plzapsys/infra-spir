apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: alertmanager-config
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}-alertmanager
    {{- include "kube-prometheus-stack.labels" . | nindent 4 }}
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: alertmanager-config
    template:
      metadata:
        labels:
          app: {{ template "kube-prometheus-stack.name" . }}-alertmanager
          {{- include "kube-prometheus-stack.labels" . | nindent 10 }}
      data:
        {{- /*
        # Why so many curly braces?
        # We need to pass Go template string down to alertmanager config,
        # but Helm and External Secrets Operator also using go templating.
        # Escape template for Helm: {{ ` and ` }}
        # Escape template for ESO: {{"{{"}} and {{"}}"}}
        */}}
        telegram.tmpl: |
          {{ `{{"{{"}} define "telegram.status" {{"}}"}}` }}
          {{ `{{"{{-"}} if eq .Status "firing" {{"}}"}}` }}ðŸ”¥{{ `{{"{{"}} else {{"}}"}}` }}âœ…{{ `{{"{{"}} end {{"-}}"}}` }}
          {{ `{{"{{"}} end {{"}}"}}` }}

          {{ `{{"{{"}} define "telegram.extended.message" {{"}}"}}` }}
          {{ `{{"{{"}} range .Alerts {{"}}"}}` }}
          <b>{{ `{{"{{"}} template "telegram.status" . {{"}}"}}` }} {{ `{{"{{"}} .Status | toUpper {{"}}"}}` }} {{ `{{"{{"}} template "telegram.status" . {{"}}"}}` }} {{ `{{"{{"}} $.CommonLabels.alertname {{"}}"}}` }}</b>
          <a href="{{ `{{"{{"}} .GeneratorURL {{"}}"}}` }}">Query</a> | <a href="{{ `{{"{{"}} $.ExternalURL {{"}}"}}` }}/#/alerts?receiver={{ `{{"{{"}} $.Receiver | urlquery {{"}}"}}` }}">Alertmanager</a>
          <b>since:</b> <code>{{ `{{"{{"}} .StartsAt.UTC.Format "15:04:05 MST 2006-01-02" {{"}}"}}` }}</code>
          {{ `{{"{{-"}} if eq .Status "resolved" {{"}}"}}` }}
          <b>ended:</b> <code>{{ `{{"{{"}} .EndsAt.UTC.Format "15:04:05 MST 2006-01-02" {{"}}"}}` }}</code>
          {{ `{{"{{-"}} end {{"}}"}}` }}
          {{ `{{"{{-"}} range .Annotations.SortedPairs {{"}}"}}` }}
          <b>{{ `{{"{{"}} .Name {{"}}"}}` }}:</b> {{ `{{"{{"}} .Value {{"}}"}}` }}
          {{ `{{"{{-"}} end {{"}}"}}` }}
          <b>labels:</b>
          {{ `{{"{{-"}} range .Labels.SortedPairs {{"}}"}}` }}
            - <b>{{ `{{"{{"}} .Name {{"}}"}}` }}:</b> <code>{{ `{{"{{"}} .Value {{"}}"}}` }}</code>
          {{ `{{"{{-"}} end {{"}}"}}` }}
          {{ `{{"{{"}} end {{"}}"}}` }}
          {{ `{{"{{"}} end {{"}}"}}` }}
        alertmanager.yaml: |
          global:
            resolve_timeout: 5m
          templates:
            - /etc/alertmanager/config/*.tmpl
          receivers:
            - name: "null"
            - name: healthchecks.io
              webhook_configs:
                - url: {{ `{{ .healthchecksUrl }}` }}
                  send_resolved: false
            - name: telegram
              telegram_configs:
                - chat_id: {{ `{{ .telegramChatId }}` }}
                  bot_token: {{ `{{ .telegramToken }}` }}
                  send_resolved: true
                  parse_mode: HTML
                  message: '{{ `{{"{{"}} template "telegram.extended.message" . {{"}}"}}` }}'
          route:
            group_by:
              - alertname
              - instance
              - job
            group_wait: 30s
            group_interval: 5m
            repeat_interval: 12h
            receiver: telegram
            routes:
              - matchers:
                  - alertname="Watchdog"
                group_interval: 2m
                repeat_interval: 2m
                receiver: healthchecks.io
              - matchers:
                  - alertname="InfoInhibitor"
                receiver: "null"
              - matchers:
                  - alertname="TargetDown"
                  - namespace=~"kube-system|kured|longhorn-system|metallb-system|observability"
                group_by:
                  - alertname
                group_wait: 6m
                receiver: telegram
              - matchers:
                  - alertname=~"RebootRequired|RebootScheduled"
                group_by:
                  - alertname
                repeat_interval: 24h
              - matchers:
                  - severity=~"warning|critical"
                continue: true
                receiver: telegram
          inhibit_rules:
            - source_matchers:
                - severity="critical"
              target_matchers:
                - severity=~"warning|info"
              equal:
                - cluster
                - namespace
            - source_matchers:
                - severity="warning"
              target_matchers:
                - severity="info"
              equal:
                - cluster
                - namespace
            - source_matchers:
                - alertname="KubeNodeUnreachable"
              target_matchers:
                - alertname="KubeNodeNotReady"
            - source_matchers:
                - alertname="KubeNodeUnreachable"
              target_matchers:
                - alertname=~"KubeDaemonSetRolloutStuck|KubeDaemonSetMisScheduled|KubeDeploymentReplicasMismatch|KubeStatefulSetReplicasMismatch|KubePodNotReady"
              equal:
                - instance
            - source_matchers:
                - alertname="KubeNodeUnreachable"
              target_matchers:
                - alertname="TargetDown"
                - namespace=~"kube-system|kured|longhorn-system|metallb-system|observability"
            - source_matchers:
                - alertname="BlackboxProbeFailed"
              target_matchers:
                - alertname="BlackboxSlowProbe"
              equal:
                - instance
  data:
    - secretKey: telegramToken
      remoteRef:
        key: secret/common/telegram
        property: bot-token
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: telegramChatId
      remoteRef:
        key: secret/common/telegram
        property: chat-id
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: healthchecksUrl
      remoteRef:
        key: secret/kps/alertmanager
        property: healthchecks-url
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
